#include <iostream>
using namespace std;
//anurag(22BET10069)
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(nullptr) {}
};

ListNode* deleteMiddle(ListNode* head) {
    if (!head || !head->next) return nullptr;
    
    ListNode* slow = head;
    ListNode* fast = head;
    ListNode* prev = nullptr;
    
    while (fast && fast->next) {
        prev = slow;
        slow = slow->next;
        fast = fast->next->next;
    }
    
    prev->next = slow->next;
    delete slow;
    
    return head;
}

void printList(ListNode* head) {
    while (head) {
        cout << head->val << " ";
        head = head->next;
    }
    cout << endl;
}

ListNode* createList(int arr[], int size) {
    if (size == 0) return nullptr;
    ListNode* head = new ListNode(arr[0]);
    ListNode* tail = head;
    for (int i = 1; i < size; i++) {
        tail->next = new ListNode(arr[i]);
        tail = tail->next;
    }
    return head;
}

int main() {
    int arr1[] = {1, 3, 4, 7, 1, 2, 6};
    int arr2[] = {1, 2, 3, 4};
    int arr3[] = {2, 1};

    ListNode* head1 = createList(arr1, 7);
    ListNode* head2 = createList(arr2, 4);
    ListNode* head3 = createList(arr3, 2);

    head1 = deleteMiddle(head1);
    head2 = deleteMiddle(head2);
    head3 = deleteMiddle(head3);

    printList(head1);
    printList(head2);
    printList(head3);

    return 0;
}
