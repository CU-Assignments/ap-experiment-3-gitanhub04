#include <iostream>
using namespace std;
//anurag(22BET10069)
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(nullptr) {}
};

ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
    if (!list1) return list2;
    if (!list2) return list1;

    if (list1->val > list2->val) swap(list1, list2);
    
    ListNode* head = list1;
    
    while (list1->next && list2) {
        if (list1->next->val > list2->val) {
            ListNode* temp = list2;
            list2 = list2->next;
            temp->next = list1->next;
            list1->next = temp;
        }
        list1 = list1->next;
    }
    
    if (!list1->next) list1->next = list2;
    
    return head;
}

void printList(ListNode* head) {
    while (head) {
        cout << head->val << " ";
        head = head->next;
    }
    cout << endl;
}

ListNode* createList(int arr[], int size) {
    if (size == 0) return nullptr;
    ListNode* head = new ListNode(arr[0]);
    ListNode* tail = head;
    for (int i = 1; i < size; i++) {
        tail->next = new ListNode(arr[i]);
        tail = tail->next;
    }
    return head;
}

int main() {
    int arr1[] = {1, 2, 4};
    int arr2[] = {1, 3, 4};

    ListNode* list1 = createList(arr1, 3);
    ListNode* list2 = createList(arr2, 3);

    ListNode* mergedList = mergeTwoLists(list1, list2);

    printList(mergedList);

    return 0;
}
